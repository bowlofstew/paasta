[tox]
usedevelop=True
basepython = python2.7
envlist = py
indexserver =
    default = https://pypi.python.org/simple
    private = http://pypi.yelpcorp.com

[flake8]
max-line-length = 120

[testenv]
usedevelop=True
basepython = python2.7
install_command = pip install --upgrade {opts} {packages}
deps = -rrequirements.txt

[testenv:py]
basepython = python2.7
setenv=
    PYTHONPATH = ./paasta_tools
    TZ = UTC
deps =
    {[testenv]deps}
    pep8==1.5.7
    flake8
    pytest==2.7.3
    mock==1.0.1
commands =
    flake8 paasta_tools tests general_itests paasta_itests
    py.test -s {posargs:tests}

[testenv:docs]
deps =
    {[testenv]deps}
    sphinx
commands =
    /bin/rm -rf docs/source/generated/
    # The last arg to apidoc is a list of excluded paths
    sphinx-apidoc -f -e -o docs/source/generated/ paasta_tools
    sphinx-build -b html -d docs/build/doctrees docs/source docs/build/html

[testenv:manpages]
# This tox invocation is called by dh-virtualenv inside a container
# and needs the full path so it can work regardless of the current directory
deps =
    :private:yelp-cgeom==1.3.1
    :private:yelp-logging==1.0.37
    -r/work/requirements.txt
commands = ./build-manpages.sh

[testenv:paasta_itests]
skipsdist=True
changedir=paasta_itests/
deps =
    docker-compose==1.3.0
commands =
    docker-compose pull --allow-insecure-ssl
    docker-compose --verbose build
    # Fire up the marathon cluster in background
    docker-compose up -d mesosmaster mesosslave marathon chronos hacheck
    # Run the paastatools container in foreground to catch the output
    # the `docker-compose run` vs `docker-compose up` is important here, as docker-compose run will
    # exit with the right code.
    #
    # dnephin says we need the --rm otherwise these containers won't be cleaned
    # up. I guess we only need this for run'd containers, not up'd containers?
    # IDK, the docs don't really specify.
    docker-compose run --rm paastatools
    docker-compose stop
    docker-compose rm --force

[testenv:paasta_itests_inside_container]
envdir=/tmp/
skipsdist=True
recreate=True
setenv =
    DOCKER_COMPOSE_PROJECT_NAME = paastatools_inside_container
changedir=paasta_itests/
deps =
    behave==1.2.4
    mock==1.0.1
    -r/work/requirements.txt
commands =
    behave {posargs}

[testenv:general_itests]
skipsdist=True
changedir=general_itests/
deps =
    {[testenv]deps}
    behave==1.2.4
    mock==1.0.1
commands =
    behave {posargs}
